arrange(desc(reviews_per_listingdays))
View(data_frame3)
View(data_frame3)
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays)) +
geom_line()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays)) +
geom_line(aes(color = neighbourgood_group))
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
color = neighbourgood_group)) +
geom_line()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
col = neighbourhood_group)) +
geom_line()
ggplot(data_frame3, aes(x = year, col = neighbourhood_group)) +
ggplot(data_frame3, aes(x = year, col = neighbourhood_group)) +
ggplot(data_frame3, aes(x = year, col = neighbourhood_group)) +
geom_line(aes(y = reviews_per_listingdays, group = 1))
ggplot(data_frame3, aes(x = year, col = neighbourhood_group)) +
geom_line(aes(y = reviews_per_listingdays, group = 1))
ggplot(data_frame3, aes(x = year, col = neighbourhood_group)) +
geom_line(aes(y = reviews_per_listingdays, col = neighbourhood_group))
ggplot(data_frame3, aes(x = year)) +
geom_line(aes(y = reviews_per_listingdays, col = neighbourhood_group))
ggplot(aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line()
ggplot(aes(x = data_frame3, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line()
ggplot(aes(x = data_frame3, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
stat_smooth()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
stat_smooth(method = lm, formula = y ~ poly(x, 10), se = FALSE)
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
stat_smooth(method = lm)
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line() +
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line() +
scale_fill_brewer(palette="Reds") +
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line() +
scale_fill_brewer(palette="Reds") +
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line() +
scale_color_continuous(palette="Reds") +
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line() +
scale_color_discrete(palette="Reds") +
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line() +
scale_color_discrete(palette="Reds") +
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line() +
scale_fill_discrete(palette="Reds") +
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line() +
scale_fill_discrete(palette="Set1") +
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_smooth() +
scale_fill_discrete(palette="Set1") +
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line(data = as.data.frame(spline(data_frame3$year,
data_frame3$reviews_per_listingdays)),
aes(x = x, y = y)) +
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line(data = as.data.frame(spline(data_frame3$year,
data_frame3$reviews_per_listingdays)),
aes(x = x, y = y)) +
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_smooth() +
scale_fill_discrete(palette="Set1") +
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line() +
scale_fill_discrete(palette="Set1") +
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_smooth(method = "loess") +
scale_fill_discrete(palette="Set1") +
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line() +
scale_color_continuous(palette="Set1") +
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line() +
scale_color_discrete(palette="Set1") +
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line() +
scale_color_discrete(palette=) +
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line() +
scale_color_discrete(palette="Set1") +
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line() +
scale_color_discrete() +
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line() +
scale_colour_manual(values=cbp1) +
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line() +
scale_color_brewer(palette = "Dark2") +
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line() +
scale_color_brewer(palette = "Reds") +
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line() +
scale_color_brewer(palette = "Set1") +
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line() +
scale_color_brewer(palette = "Set2") +
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line() +
scale_color_brewer(palette = "Set3") +
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line() +
scale_color_brewer(palette = "Set1") +
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line() +
scale_color_brewer(palette = "Set1") +
labs(title = "Reviews per Listing Days Ratio",
subtitle = 'Over Time by Neighbourhood Group'
y = NULL,
x = 'Year' ,
fill = "Room Type")
subtitle = 'Over Time by Neighbourhood Group',
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line() +
scale_color_brewer(palette = "Set1") +
labs(title = "Reviews per Listing Days Ratio",
subtitle = 'Over Time by Neighbourhood Group',
y = 'Reviews Per Listing Days',
x = 'Year')+
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line() +
scale_color_brewer(palette = "Set1") +
labs(title = "Reviews per Listing Days Ratio",
subtitle = 'Over Time by Neighbourhood Group',
y = 'Reviews Per Listing Days',
x = 'Year',
legend = 'Neighbourhood')+
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line() +
scale_color_brewer(palette = "Set1") +
labs(title = "Reviews per Listing Days Ratio",
subtitle = 'Over Time by Neighbourhood Group',
y = 'Reviews Per Listing Days',
x = 'Year',
Color = 'Neighbourhood')+
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line() +
scale_color_brewer(palette = "Set1") +
labs(title = "Reviews per Listing Days Ratio",
subtitle = 'Over Time by Neighbourhood Group',
y = 'Reviews Per Listing Days',
x = 'Year',
color = 'Neighbourhood')+
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line(size = 1.1) +
scale_color_brewer(palette = "Set1") +
labs(title = "Reviews per Listing Days Ratio",
subtitle = 'Over Time by Neighbourhood Group',
y = 'Reviews Per Listing Days',
x = 'Year',
color = 'Neighbourhood')+
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line(size = 1.0) +
scale_color_brewer(palette = "Set1") +
labs(title = "Reviews per Listing Days Ratio",
subtitle = 'Over Time by Neighbourhood Group',
y = 'Reviews Per Listing Days',
x = 'Year',
color = 'Neighbourhood')+
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line(size = 0.5) +
scale_color_brewer(palette = "Set1") +
labs(title = "Reviews per Listing Days Ratio",
subtitle = 'Over Time by Neighbourhood Group',
y = 'Reviews Per Listing Days',
x = 'Year',
color = 'Neighbourhood')+
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line(size = 0.7) +
scale_color_brewer(palette = "Set1") +
labs(title = "Reviews per Listing Days Ratio",
subtitle = 'Over Time by Neighbourhood Group',
y = 'Reviews Per Listing Days',
x = 'Year',
color = 'Neighbourhood')+
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line(size = 0.8) +
scale_color_brewer(palette = "Set1") +
labs(title = "Reviews per Listing Days Ratio",
subtitle = 'Over Time by Neighbourhood Group',
y = 'Reviews Per Listing Days',
x = 'Year',
color = 'Neighbourhood')+
theme_classic()
View(airbnb_data)
data_frame4 = airbnb_data %>%
group_by(year, neighbourhood_group) %>%
summarize(avg_price = weighted.mean(price, availability_365))
View(data_frame4)
summarize(avg_price = mean(price)
summarize(avg_price = mean(price)
data_frame5 = airbnb_data %>%
group_by(year, neighbourhood_group) %>%
summarize(avg_price = mean(price))
mean(data_frame4$avg_price)
mean(data_frame5$avg_price)
rm(data_frame5)
ggplot(data_frame4, aes(x = year, y = avg_price,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line(size = 0.8) +
scale_color_brewer(palette = "Set1") +
labs(title = "Reviews per Listing Days Ratio",
subtitle = 'Over Time by Neighbourhood Group',
y = 'Reviews Per Listing Days',
x = 'Year',
color = 'Neighbourhood')+
theme_classic()
ggplot(data_frame4, aes(x = year, y = avg_price,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line(size = 0.8) +
scale_color_brewer(palette = "Set1") +
labs(title = "Average Price per Night",
subtitle = 'Over Time by Neighbourhood Group',
y = 'Avg. Price',
x = 'Year',
color = 'Neighbourhood')+
theme_classic()
ggplot(data_frame4, aes(x = year, y = avg_price,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line(size = 0.8) +
scale_color_brewer(palette = "Reds") +
labs(title = "Average Price per Night",
subtitle = 'Over Time by Neighbourhood Group',
y = 'Avg. Price',
x = 'Year',
color = 'Neighbourhood')+
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line(size = 0.8) +
scale_color_brewer(palette = "Reds") +
labs(title = "Reviews per Listing Days Ratio",
subtitle = 'Over Time by Neighbourhood Group',
y = 'Reviews Per Listing Days',
x = 'Year',
color = 'Neighbourhood')+
theme_classic()
ggplot(data_frame4, aes(x = year, y = avg_price,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line(size = 0.8) +
scale_color_brewer(palette = "Set1") +
labs(title = "Average Price per Night",
subtitle = 'Over Time by Neighbourhood Group',
y = 'Avg. Price',
x = 'Year',
color = 'Neighbourhood')+
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line(size = 0.8) +
scale_color_brewer(palette = "Set1") +
labs(title = "Reviews per Listing Days Ratio",
subtitle = 'Over Time by Neighbourhood Group',
y = 'Reviews Per Listing Days',
x = 'Year',
color = 'Neighbourhood')+
theme_classic()
ggplot(data_frame4, aes(x = year, y = avg_price,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line(size = 0.8) +
scale_color_brewer(palette = "Set1") +
labs(title = "Average Price per Night",
subtitle = 'Over Time by Neighbourhood Group',
y = 'Avg. Price',
x = 'Year',
color = 'Neighbourhood')+
theme_classic()
ggplot(treemap_data3, aes(area = market_size,
fill = reviews_per_listingdays,
label = neighbourhood,
subgroup = neighbourhood_group)) +
geom_treemap() +
geom_treemap_subgroup_border() +
geom_treemap_subgroup_text(place = "centre", grow = T, alpha = 0.6, colour =
"black", fontface = "italic", min.size = 0) +
geom_treemap_text(colour = "grey81", place = "topleft", reflow = T) +
scale_fill_gradient2(low="white", mid="yellow", high="red",
#midpoint = 0.04,
limits = c(0, 0.1),
oob = scales::squish) +
labs(fill = "RPLD",
title = 'Market Size by Neighbourhood and\nReviews per Listing Days Heatmap') +
theme(legend.position="none", plot.title = element_text(hjust = 0.0))
shiny::runApp('C:/Users/Daniel/Dropbox/Data Science/NYC DSA/R/Exploratory Visualization and Shiny Project/AirBnB-NYC-2019-Visualization-Project')
airbnb_data %>%
filter(year == input$dataset) %>%
group_by(neighbourhood_group)
library(leaflet)#Leaflet is one of the most popular open-source JavaScript libraries for
#interactive maps. This leaflet R package makes it easy to integrate and control
#Leaflet maps in R.
library(leaflet.extras) #Provides a simple heat map function, addheatmap().
library(tidyverse) #Several tools to organize data
library(ggplot2) #Several tools for graphing
library(treemapify) # Allows easy creation of Treemap graph
library(scales) #Allows easily labeling of axis. Example:
#scale_x_continuous(labels = unit_format(unit = "K", scale = 1e-3))
library(lubridate) #Allows easy extraction of day, month, year
load ("C:/Users/Daniel/Dropbox/Data Science/NYC DSA/R/Exploratory Visualization and Shiny Project/AirBnB-NYC-2019-Visualization-Project/.RData")
airbnb_data %>%
filter(year == input$dataset) %>%
group_by(neighbourhood_group)
airbnb_data %>%
filter(year == 2020) %>%
group_by(neighbourhood_group)
a + airbnb_data %>%
filter(year == 2020) %>%
group_by(neighbourhood_group)
airbnb_data %>%
filter(year == 2020) %>%
group_by(neighbourhood_group) %>%
summarize(number_of_listings = n())
airbnb_data %>%
filter(year == 2020) %>%
group_by(neighbourhood) %>%
summarize(number_of_listings = n())
shiny::runApp('C:/Users/Daniel/Dropbox/Data Science/NYC DSA/R/Exploratory Visualization and Shiny Project/AirBnB-NYC-2019-Visualization-Project')
airbnb_data %>%
filter(year == 2020) %>%
group_by(neighbourhood)
a= airbnb_data %>%
filter(year == 2020) %>%
group_by(neighbourhood)
View(a)
View(airbnb_data)
a = airbnb_data %>%
filter(year == 2020) %>%
group_by(neighbourhood) %>%
summarize(number_of_listings = n(),
reviews = sum(reviews_this_year),
avg_availability = mean(availability_365),
avg_price = weighted.mean(price, availability_365))
View(a)
a = airbnb_data %>%
filter(year == 2020) %>%
group_by(neighbourhood) %>%
summarize(neighbourhood_group = neighbourhood_group,
number_of_listings = n(),
reviews = sum(reviews_this_year),
avg_availability = mean(availability_365),
avg_price = weighted.mean(price, availability_365))
View(a)
View(airbnb_data)
a = airbnb_data %>%
filter(year == 2020) %>%
group_by(neighbourhood, neighbourhood_group) %>%
summarize(number_of_listings = n(),
reviews = sum(reviews_this_year),
avg_availability = mean(availability_365),
avg_price = weighted.mean(price, availability_365))
View(a)
runApp('C:/Users/Daniel/Dropbox/Data Science/NYC DSA/R/Exploratory Visualization and Shiny Project/AirBnB-NYC-2019-Visualization-Project')
runApp('C:/Users/Daniel/Dropbox/Data Science/NYC DSA/R/Exploratory Visualization and Shiny Project/AirBnB-NYC-2019-Visualization-Project')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='danellen', token='2982E11607DA5CB027E8E9B4BA0507CA', secret='KJYaDHPsTJOyFwDdEL7q6oEqiFPajAc1oj8gpg/w')
library(rsconnect)
rsconnect::setAccountInfo(name='danellen', token='2982E11607DA5CB027E8E9B4BA0507CA', secret='KJYaDHPsTJOyFwDdEL7q6oEqiFPajAc1oj8gpg/w')
rsconnect::deployApp("C:/Users/Daniel/Dropbox/Data Science/NYC DSA/R/Exploratory Visualization and Shiny Project/AirBnB-NYC-2019-Visualization-Project")
rsconnect::deployApp("C:/Users/Daniel/Dropbox/Data Science/NYC DSA/R/Exploratory Visualization and Shiny Project/AirBnB-NYC-2019-Visualization-Project")
yyyy
rsconnect::deployApp("C:/Users/Daniel/Dropbox/Data Science/NYC DSA/R/Exploratory Visualization and Shiny Project/AirBnB-NYC-2019-Visualization-Project")
shiny::runApp('C:/Users/Daniel/Dropbox/Data Science/NYC DSA/R/Exploratory Visualization and Shiny Project/AirBnB-NYC-2019-Visualization-Project')
library(rsconnect)
rsconnect::setAccountInfo(name='danellen', token='2982E11607DA5CB027E8E9B4BA0507CA', secret='KJYaDHPsTJOyFwDdEL7q6oEqiFPajAc1oj8gpg/w')
library(rsconnect)
rsconnect::setAccountInfo(name='danellen', token='2982E11607DA5CB027E8E9B4BA0507CA', secret='KJYaDHPsTJOyFwDdEL7q6oEqiFPajAc1oj8gpg/w')
library(rsconnect)
rsconnect::deployApp("C:/Users/Daniel/Dropbox/Data Science/NYC DSA/R/Exploratory Visualization and Shiny Project/AirBnB-NYC-2019-Visualization-Project")
shiny::runApp('C:/Users/Daniel/Dropbox/Data Science/NYC DSA/R/Exploratory Visualization and Shiny Project/AirBnB-NYC-2019-Visualization-Project')
