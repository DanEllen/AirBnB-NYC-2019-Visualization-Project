ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line() +
scale_color_brewer(palette = "Set1") +
labs(title = "Reviews per Listing Days Ratio",
subtitle = 'Over Time by Neighbourhood Group'
y = NULL,
x = 'Year' ,
fill = "Room Type")
subtitle = 'Over Time by Neighbourhood Group',
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line() +
scale_color_brewer(palette = "Set1") +
labs(title = "Reviews per Listing Days Ratio",
subtitle = 'Over Time by Neighbourhood Group',
y = 'Reviews Per Listing Days',
x = 'Year')+
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line() +
scale_color_brewer(palette = "Set1") +
labs(title = "Reviews per Listing Days Ratio",
subtitle = 'Over Time by Neighbourhood Group',
y = 'Reviews Per Listing Days',
x = 'Year',
legend = 'Neighbourhood')+
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line() +
scale_color_brewer(palette = "Set1") +
labs(title = "Reviews per Listing Days Ratio",
subtitle = 'Over Time by Neighbourhood Group',
y = 'Reviews Per Listing Days',
x = 'Year',
Color = 'Neighbourhood')+
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line() +
scale_color_brewer(palette = "Set1") +
labs(title = "Reviews per Listing Days Ratio",
subtitle = 'Over Time by Neighbourhood Group',
y = 'Reviews Per Listing Days',
x = 'Year',
color = 'Neighbourhood')+
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line(size = 1.1) +
scale_color_brewer(palette = "Set1") +
labs(title = "Reviews per Listing Days Ratio",
subtitle = 'Over Time by Neighbourhood Group',
y = 'Reviews Per Listing Days',
x = 'Year',
color = 'Neighbourhood')+
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line(size = 1.0) +
scale_color_brewer(palette = "Set1") +
labs(title = "Reviews per Listing Days Ratio",
subtitle = 'Over Time by Neighbourhood Group',
y = 'Reviews Per Listing Days',
x = 'Year',
color = 'Neighbourhood')+
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line(size = 0.5) +
scale_color_brewer(palette = "Set1") +
labs(title = "Reviews per Listing Days Ratio",
subtitle = 'Over Time by Neighbourhood Group',
y = 'Reviews Per Listing Days',
x = 'Year',
color = 'Neighbourhood')+
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line(size = 0.7) +
scale_color_brewer(palette = "Set1") +
labs(title = "Reviews per Listing Days Ratio",
subtitle = 'Over Time by Neighbourhood Group',
y = 'Reviews Per Listing Days',
x = 'Year',
color = 'Neighbourhood')+
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line(size = 0.8) +
scale_color_brewer(palette = "Set1") +
labs(title = "Reviews per Listing Days Ratio",
subtitle = 'Over Time by Neighbourhood Group',
y = 'Reviews Per Listing Days',
x = 'Year',
color = 'Neighbourhood')+
theme_classic()
View(airbnb_data)
data_frame4 = airbnb_data %>%
group_by(year, neighbourhood_group) %>%
summarize(avg_price = weighted.mean(price, availability_365))
View(data_frame4)
summarize(avg_price = mean(price)
summarize(avg_price = mean(price)
data_frame5 = airbnb_data %>%
group_by(year, neighbourhood_group) %>%
summarize(avg_price = mean(price))
mean(data_frame4$avg_price)
mean(data_frame5$avg_price)
rm(data_frame5)
ggplot(data_frame4, aes(x = year, y = avg_price,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line(size = 0.8) +
scale_color_brewer(palette = "Set1") +
labs(title = "Reviews per Listing Days Ratio",
subtitle = 'Over Time by Neighbourhood Group',
y = 'Reviews Per Listing Days',
x = 'Year',
color = 'Neighbourhood')+
theme_classic()
ggplot(data_frame4, aes(x = year, y = avg_price,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line(size = 0.8) +
scale_color_brewer(palette = "Set1") +
labs(title = "Average Price per Night",
subtitle = 'Over Time by Neighbourhood Group',
y = 'Avg. Price',
x = 'Year',
color = 'Neighbourhood')+
theme_classic()
ggplot(data_frame4, aes(x = year, y = avg_price,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line(size = 0.8) +
scale_color_brewer(palette = "Reds") +
labs(title = "Average Price per Night",
subtitle = 'Over Time by Neighbourhood Group',
y = 'Avg. Price',
x = 'Year',
color = 'Neighbourhood')+
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line(size = 0.8) +
scale_color_brewer(palette = "Reds") +
labs(title = "Reviews per Listing Days Ratio",
subtitle = 'Over Time by Neighbourhood Group',
y = 'Reviews Per Listing Days',
x = 'Year',
color = 'Neighbourhood')+
theme_classic()
ggplot(data_frame4, aes(x = year, y = avg_price,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line(size = 0.8) +
scale_color_brewer(palette = "Set1") +
labs(title = "Average Price per Night",
subtitle = 'Over Time by Neighbourhood Group',
y = 'Avg. Price',
x = 'Year',
color = 'Neighbourhood')+
theme_classic()
ggplot(data_frame3, aes(x = year, y = reviews_per_listingdays,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line(size = 0.8) +
scale_color_brewer(palette = "Set1") +
labs(title = "Reviews per Listing Days Ratio",
subtitle = 'Over Time by Neighbourhood Group',
y = 'Reviews Per Listing Days',
x = 'Year',
color = 'Neighbourhood')+
theme_classic()
ggplot(data_frame4, aes(x = year, y = avg_price,
group = neighbourhood_group,
color = neighbourhood_group)) +
geom_line(size = 0.8) +
scale_color_brewer(palette = "Set1") +
labs(title = "Average Price per Night",
subtitle = 'Over Time by Neighbourhood Group',
y = 'Avg. Price',
x = 'Year',
color = 'Neighbourhood')+
theme_classic()
ggplot(treemap_data3, aes(area = market_size,
fill = reviews_per_listingdays,
label = neighbourhood,
subgroup = neighbourhood_group)) +
geom_treemap() +
geom_treemap_subgroup_border() +
geom_treemap_subgroup_text(place = "centre", grow = T, alpha = 0.6, colour =
"black", fontface = "italic", min.size = 0) +
geom_treemap_text(colour = "grey81", place = "topleft", reflow = T) +
scale_fill_gradient2(low="white", mid="yellow", high="red",
#midpoint = 0.04,
limits = c(0, 0.1),
oob = scales::squish) +
labs(fill = "RPLD",
title = 'Market Size by Neighbourhood and\nReviews per Listing Days Heatmap') +
theme(legend.position="none", plot.title = element_text(hjust = 0.0))
shiny::runApp('C:/Users/Daniel/Dropbox/Data Science/NYC DSA/R/Exploratory Visualization and Shiny Project/AirBnB-NYC-2019-Visualization-Project')
View(airbnb_data)
airbnb_data %>%
filter(year == input$year) %>%
summarize(listings = n())
airbnb_data %>%
filter(year == 2020) %>%
summarize(listings = n())
a = airbnb_data %>%
filter(year == 2020) %>%
summarize(listings = n())
class(a)
a[0] = airbnb_data %>%
filter(year == 2020) %>%
summarize(listings = n())
a[1] = airbnb_data %>%
filter(year == 2020) %>%
summarize(listings = n())
class(a)
a
b = a$listings
class(b)
b
runApp('C:/Users/Daniel/Dropbox/Data Science/NYC DSA/R/Exploratory Visualization and Shiny Project/AirBnB-NYC-2019-Visualization-Project')
listings1 = f'{listings()$listings:,}'
listings1 = f'{listings()$listings:,}'
f'{30000:,}'
f'{30000:,}'
format(12345.678,big.mark=",",scientific=FALSE)
format(listings0()$listings,big.mark=",",scientific=FALSE)
runApp('C:/Users/Daniel/Dropbox/Data Science/NYC DSA/R/Exploratory Visualization and Shiny Project/AirBnB-NYC-2019-Visualization-Project')
runApp()
runApp('C:/Users/Daniel/Dropbox/Data Science/NYC DSA/R/Exploratory Visualization and Shiny Project/AirBnB-NYC-2019-Visualization-Project')
format(listings0()$listings,big.mark=",",scientific=FALSE)
format(listings0()$listings,big.mark=",",scientific=FALSE)
runApp('C:/Users/Daniel/Dropbox/Data Science/NYC DSA/R/Exploratory Visualization and Shiny Project/AirBnB-NYC-2019-Visualization-Project')
View(airbnb_data)
View(airbnb_data)
runApp('C:/Users/Daniel/Dropbox/Data Science/NYC DSA/R/Exploratory Visualization and Shiny Project/AirBnB-NYC-2019-Visualization-Project')
airbnb_data %>%
filter(year == input$year) %>%
summarize(listings_days = n()*availability_365)
airbnb_data %>%
filter(year == input$year) %>%
summarize(listings_days = n()*availability_365)
airbnb_data %>%
filter(year == 2020) %>%
summarize(listings_days = n()*availability_365)
airbnb_data %>%
filter(year == 2020) %>%
summarize(listings_days = sum(n()*availability_365)
output$listing_days <- renderValueBox({
valueBox(
paste0(format(listings1()$listings_days,big.mark=",",scientific=FALSE), ""),
"Listings Days",
icon = icon("list"),
color = "purple"
)
})
#Year for snapshot
year0 = reactive({airbnb_data %>%
filter(year == input$year)})
#Heatmap of listings--------------
output$heatmap_listings <- renderLeaflet({
leaflet(data = year0()) %>%
addProviderTiles(providers$CartoDB.Voyager) %>%
addHeatmap( #Adds a heatmap
lng =  year0()$longitude,
lat =  year0()$latitude,
blur = 4,
intensity = NULL,
cellSize = 1,
radius = 1
)  %>%
addMarkers( #Adds markets in clusters. Have this as an option in Shiny
lng = year0()$longitude,
lat = year0()$latitude,
label = year0()$host_id,
clusterOptions = markerClusterOptions()
)
})
}
airbnb_data %>%
filter(year == 2020) %>%
summarize(listings_days = sum(n()*availability_365))
runApp('C:/Users/Daniel/Dropbox/Data Science/NYC DSA/R/Exploratory Visualization and Shiny Project/AirBnB-NYC-2019-Visualization-Project')
paste(format(round(1000000 / 1e6, 1), trim = TRUE), "M")
paste(format(round(1000000 / 1e6, 1), trim = TRUE), "M")
paste(format(round(100000000 / 1e6, 1), trim = TRUE), "M")
runApp('C:/Users/Daniel/Dropbox/Data Science/NYC DSA/R/Exploratory Visualization and Shiny Project/AirBnB-NYC-2019-Visualization-Project')
paste(format(round(listings1()$listings_days / 1e6, 1), trim = TRUE), "M")
paste(format(round(listings1()$listings_days / 1e6, 1), trim = TRUE), "M")
runApp('C:/Users/Daniel/Dropbox/Data Science/NYC DSA/R/Exploratory Visualization and Shiny Project/AirBnB-NYC-2019-Visualization-Project')
runApp('C:/Users/Daniel/Dropbox/Data Science/NYC DSA/R/Exploratory Visualization and Shiny Project/AirBnB-NYC-2019-Visualization-Project')
runApp('C:/Users/Daniel/Dropbox/Data Science/NYC DSA/R/Exploratory Visualization and Shiny Project/AirBnB-NYC-2019-Visualization-Project')
runApp('C:/Users/Daniel/Dropbox/Data Science/NYC DSA/R/Exploratory Visualization and Shiny Project/AirBnB-NYC-2019-Visualization-Project')
map  %>%
addHeatmap( #Adds a heatmap
lng =  year0$longitude,
lat =  year0$latitude,
intensity = year0$price,
blur = 4,
max = quant_98_price_max,
cellSize = 1,
radius = 1
)
map  %>%
addHeatmap( #Adds a heatmap
lng =  year0$longitude,
lat =  year0$latitude,
intensity = year0$price,
blur = 4,
max = quant_98_price_max,
cellSize = 1,
radius = 1
)
quant_98_price_max = as.numeric(quantile(year0$price, c(0.98)))
map  %>%
addHeatmap( #Adds a heatmap
lng =  year0$longitude,
lat =  year0$latitude,
intensity = year0$price,
blur = 4,
max = quant_98_price_max,
cellSize = 1,
radius = 1
)
year0 = airbnb_data %>%
filter(., year == 2020)
map  %>%
addHeatmap( #Adds a heatmap
lng =  year0$longitude,
lat =  year0$latitude,
intensity = year0$price,
blur = 4,
max = quant_98_price_max,
cellSize = 1,
radius = 1
)
quant_98_price_max = as.numeric(quantile(year0$price, c(0.98)))
map  %>%
addHeatmap( #Adds a heatmap
lng =  year0$longitude,
lat =  year0$latitude,
intensity = year0$price,
blur = 4,
max = quant_98_price_max,
cellSize = 1,
radius = 1
)
quant_98_price_max = as.numeric(quantile(year0$price, c(0.98)))
map = leaflet() %>% addProviderTiles(providers$CartoDB.Voyager)
map  %>%
addHeatmap( #Adds a heatmap
lng =  year0$longitude,
lat =  year0$latitude,
intensity = year0$price,
blur = 4,
max = quant_98_price_max,
cellSize = 1,
radius = 1
)
map  %>%
addHeatmap( #Adds a heatmap
lng =  year0$longitude,
lat =  year0$latitude,
intensity = year0$price,
blur = 1,
max = quant_98_price_max,
cellSize = 1,
radius = 1
)
map  %>%
addHeatmap( #Adds a heatmap
lng =  year0$longitude,
lat =  year0$latitude,
intensity = year0$price,
blur = 100,
max = quant_98_price_max,
cellSize = 1,
radius = 1
)
map  %>%
addHeatmap( #Adds a heatmap
lng =  year0$longitude,
lat =  year0$latitude,
intensity = year0$price,
blur = 10,
max = quant_98_price_max,
cellSize = 1,
radius = 1
)
map  %>%
addHeatmap( #Adds a heatmap
lng =  year0$longitude,
lat =  year0$latitude,
intensity = year0$price,
blur = 1,
max = quant_98_price_max,
cellSize = 1,
radius = 1
)
map  %>%
addHeatmap( #Adds a heatmap
lng =  year0$longitude,
lat =  year0$latitude,
intensity = year0$price,
blur = 1,
max = quant_98_price_max,
cellSize = 1,
radius = 2
)
map  %>%
addHeatmap( #Adds a heatmap
lng =  year0$longitude,
lat =  year0$latitude,
intensity = year0$price,
blur = 1,
max = quant_98_price_max,
cellSize = 2,
radius = 2
)
map  %>%
addHeatmap( #Adds a heatmap
lng =  year0$longitude,
lat =  year0$latitude,
intensity = year0$price,
blur = 1,
max = quant_98_price_max,
cellSize = 1,
radius = 2
)
runApp('C:/Users/Daniel/Dropbox/Data Science/NYC DSA/R/Exploratory Visualization and Shiny Project/AirBnB-NYC-2019-Visualization-Project')
runApp('C:/Users/Daniel/Dropbox/Data Science/NYC DSA/R/Exploratory Visualization and Shiny Project/AirBnB-NYC-2019-Visualization-Project')
airbnb_data %>%
filter(year == 2020 ) %>%
summarize(avg_price = weighted.mean(price, availability_365))
airbnb_data %>%
filter(year == 2020 ) %>%
summarize(avg_price = weighted.mean(price, availability_365))
airbnb_data %>%
filter(year == 2019 ) %>%
summarize(avg_price = weighted.mean(price, availability_365))
airbnb_data %>%
filter(year == 2019 ) %>%
summarize(avg_price = mean(price))
airbnb_data %>%
filter(year == 2019 ) %>%
summarize(avg_price = weighted.mean(price, availability_365))
runApp('C:/Users/Daniel/Dropbox/Data Science/NYC DSA/R/Exploratory Visualization and Shiny Project/AirBnB-NYC-2019-Visualization-Project')
airbnb_data %>%
filter(year == 2020) %>%
summarize(avg_price = weighted.mean(price, availability_365))
airbnb_data %>%
filter(year == 2020) %>%
summarize(avg_price = weighted.mean(price, availability_365))
airbnb_data %>%
filter(year == 2015) %>%
summarize(avg_price = weighted.mean(price, availability_365))
runApp('C:/Users/Daniel/Dropbox/Data Science/NYC DSA/R/Exploratory Visualization and Shiny Project/AirBnB-NYC-2019-Visualization-Project')
map = leaflet() %>% addProviderTiles(providers$CartoDB.Voyager)
quant_98_price_max = as.numeric(quantile(year0$price, c(0.98)))
map  %>%
addHeatmap( #Adds a heatmap
lng =  year0$longitude,
lat =  year0$latitude,
intensity = year0$price,
blur = 4,
max = quant_98_price_max,
cellSize = 1,
radius = 1
)
year0 = airbnb_data %>%
filter(., year == 2020)
map  %>%
addHeatmap( #Adds a heatmap
lng =  year0$longitude,
lat =  year0$latitude,
intensity = year0$price,
blur = 4,
max = quant_98_price_max,
cellSize = 1,
radius = 1
)
quant_98_price_max = as.numeric(quantile(year0$price, c(0.98)))
map  %>%
addHeatmap( #Adds a heatmap
lng =  year0$longitude,
lat =  year0$latitude,
intensity = year0$price,
blur = 4,
max = quant_98_price_max,
cellSize = 1,
radius = 1
)
View(year0)
runApp('C:/Users/Daniel/Dropbox/Data Science/NYC DSA/R/Exploratory Visualization and Shiny Project/AirBnB-NYC-2019-Visualization-Project')
