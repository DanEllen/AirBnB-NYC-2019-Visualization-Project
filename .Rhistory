"black", fontface = "italic", min.size = 0) +
geom_treemap_text(colour = "grey81", place = "topleft", reflow = T) +
scale_fill_gradient2(low="white", mid="yellow", high="red",
#midpoint = 0.04,
limits = c(0, 0.1),
oob = scales::squish) +
labs(fill = "RPLD",
title = 'Treemap of Market Size by Neighbourhood \nand Reviews per Listing Days Heatmap') +
theme(legend.position="none", plot.title = element_text(hjust = 0.5))
ggplot(treemap_data3, aes(area = market_size,
fill = reviews_per_listingdays,
label = neighbourhood,
subgroup = neighbourhood_group)) +
geom_treemap() +
geom_treemap_subgroup_border() +
geom_treemap_subgroup_text(place = "centre", grow = T, alpha = 0.6, colour =
"black", fontface = "italic", min.size = 0) +
geom_treemap_text(colour = "grey81", place = "topleft", reflow = T) +
scale_fill_gradient2(low="white", mid="yellow", high="red",
#midpoint = 0.04,
limits = c(0, 0.1),
oob = scales::squish) +
labs(fill = "RPLD",
title = 'Market Size by Neighbourhood \nand Reviews per Listing Days Heatmap') +
theme(legend.position="none", plot.title = element_text(hjust = 0.5))
market_size_years = c(sum(airbnb_data2015$availability_by_price),
sum(airbnb_data2016$availability_by_price),
sum(airbnb_data2017$availability_by_price),
sum(airbnb_data2018$availability_by_price),
sum(airbnb_data2019$availability_by_price),
sum(airbnb_data2020$availability_by_price))
market_size_func(airbnb_data2015)
market_size_func = function(dataframe) {
dataframe = dataframe %>%
mutate(availability_by_price = availability_365 * price)
}
market_size_func(airbnb_data2015)
View(airbnb_data2015)
market_size_func(airbnb_data2015)
market_size_func = function(dataframe) {
dataframe = dataframe %>%
mutate(availability_by_price = availability_365 * price)
}
market_size_func(airbnb_data2015)
airbnb_data2020 = airbnb_data2020 %>%
mutate(availability_by_price = availability_365 * price)
airbnb_data2015 = airbnb_data2015 %>%
mutate(availability_by_price = availability_365 * price)
market_size_func = function(dataframe) {
dataframe = dataframe %>%
mutate(datafram$availability_by_price = dataframe$availability_365 * dataframe$price)
}
market_size_func = function(dataframe) {
dataframe = dataframe %>%
mutate(dataframe$availability_by_price = dataframe$availability_365 * dataframe$price)
}
market_size_func = function(dataframe) {
dataframe = dataframe %>%
mutate(dataframe$availability_by_price = dataframe$availability_365 * dataframe$price)
}
return(dataframe = dataframe %>%
mutate(availability_by_price = availability_365 * price))
market_size_func = function(dataframe) {
return(dataframe = dataframe %>%
mutate(availability_by_price = availability_365 * price))
}
market_size_func(airbnb_data2015)
market_size_func(airbnb_data2016)
View(airbnb_data2016)
market_size_func = function(dataframe) {
dataframe = dataframe %>%
mutate(availability_by_price = availability_365 * price)
return(dataframe)
}
market_size_func(airbnb_data2015)
market_size_func(airbnb_data2016)
market_size_func = function(dataframe) {
dataframe = dataframe %>%
mutate(availability_by_price = availability_365 * price)
return(dataframe)
}
market_size_func(airbnb_data2015)
market_size_func(airbnb_data2016)
market_size_func = function(dataframe) {
dataframe = dataframe %>%
mutate(availability_by_price = availability_365 * price)
}
market_size_func(airbnb_data2015)
market_size_func(airbnb_data2016)
View(airbnb_data2015)
market_size_func(airbnb_data2016)
View(airbnb_data2016)
market_size_func = function(dataframe) {
dataframe %>%
mutate(availability_by_price = availability_365 * price)
}
market_size_func(airbnb_data2016)
market_size_func = function(dataframe) {
dataframe = dataframe %>%
mutate(availability_by_price = availability_365 * price)
}
market_size_func(airbnb_data2016)
market_size_func = function(dataframe) {
dataframe %>%
mutate(availability_by_price = availability_365 * price)
}
airbnb_data2015 = market_size_func(airbnb_data2016)
airbnb_data2015 = market_size_func(airbnb_data2016)
airbnb_data2016 = market_size_func(airbnb_data2016)
airbnb_data2015 = market_size_func(airbnb_data2015)
airbnb_data2016 = market_size_func(airbnb_data2016)
airbnb_data2017 = market_size_func(airbnb_data2017)
airbnb_data2018 = market_size_func(airbnb_data2018)
airbnb_data2019 = market_size_func(airbnb_data2019)
market_size_years = c(sum(airbnb_data2015$availability_by_price),
sum(airbnb_data2016$availability_by_price),
sum(airbnb_data2017$availability_by_price),
sum(airbnb_data2018$availability_by_price),
sum(airbnb_data2019$availability_by_price),
sum(airbnb_data2020$availability_by_price))
years = c('2015', '2016', '2017', '2018', '2019', '2020')
market_size_years = c(sum(airbnb_data2015$availability_by_price),
sum(airbnb_data2016$availability_by_price),
sum(airbnb_data2017$availability_by_price),
sum(airbnb_data2018$availability_by_price),
sum(airbnb_data2019$availability_by_price),
sum(airbnb_data2020$availability_by_price))
total_market_size_by_year = data.frame(years, market_size)
total_market_size_by_year = data.frame(years, market_size_years)
View(total_market_size_by_year)
View(airbnb_data)
airbnb_data = market_size_func(airbnb_data)
View(airbnb_data)
View(airbnb_data)
market_size_years = airbnb_data %>%
group_by(year, neighbourhood_group) %>%
summarize(market_size = sum(availability_by_price))
View(market_size_years)
ggplot(market_size_years, aes(year)) +
geom_bar(aes(fill=neighbourhood_group), width = 0.5) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Categorywise Bar Chart",
subtitle="Manufacturer of vehicles",
caption="Source: Manufacturers from 'mpg' dataset")
ggplot(market_size_years, aes(x = year, y = market_size)) +
geom_bar(aes(fill=neighbourhood_group), width = 0.5) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Categorywise Bar Chart",
subtitle="Manufacturer of vehicles",
caption="Source: Manufacturers from 'mpg' dataset")
ggplot(market_size_years, aes(x = year, y = market_size)) +
geom_bar(aes(fill=neighbourhood_group), width = 0.5) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Categorywise Bar Chart",
subtitle="Manufacturer of vehicles",
caption="Source: Manufacturers from 'mpg' dataset")
ggplot(market_size_years, aes(x = year, y = market_size)) +
geom_bar(stat = 'identity', aes(fill=neighbourhood_group), width = 0.5) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Categorywise Bar Chart",
subtitle="Manufacturer of vehicles",
caption="Source: Manufacturers from 'mpg' dataset")
ggplot(market_size_years, aes(x = year, y = market_size)) +
geom_bar(stat = 'identity',
aes(fill=neighbourhood_group)) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Categorywise Bar Chart",
subtitle="Manufacturer of vehicles",
caption="Source: Manufacturers from 'mpg' dataset")
ggplot(market_size_years, aes(x = year, y = market_size)) +
geom_bar(stat = 'identity',
aes(fill = reorder(neighbourhood_group, marker_size))) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Categorywise Bar Chart",
subtitle="Manufacturer of vehicles",
caption="Source: Manufacturers from 'mpg' dataset")
ggplot(market_size_years, aes(x = year, y = market_size)) +
geom_bar(stat = 'identity',
aes(fill = reorder(neighbourhood_group, market_size))) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Categorywise Bar Chart",
subtitle="Manufacturer of vehicles",
caption="Source: Manufacturers from 'mpg' dataset")
ggplot(market_size_years, aes(x = year, y = market_size)) +
geom_bar(stat = 'identity',
aes(fill = reorder(neighbourhood_group, market_size))) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Categorywise Bar Chart",
subtitle="Manufacturer of vehicles",
fill = "Neighbourhood Group")
ggplot(market_size_years, aes(x = year, y = market_size)) +
geom_bar(stat = 'identity',
aes(fill = reorder(neighbourhood_group, market_size))) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Categorywise Bar Chart",
subtitle="Manufacturer of vehicles",
fill = "Neighbourhood Group") +
theme_classic()
ggplot(market_size_years, aes(x = year, y = market_size)) +
geom_bar(stat = 'identity',
aes(fill = reorder(neighbourhood_group, market_size))) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Categorywise Bar Chart",
subtitle="Manufacturer of vehicles",
fill = "Neighbourhood Group") +
theme_classic() +
scale_fill_brewer(palette="Dark2")
ggplot(market_size_years, aes(x = year, y = market_size)) +
geom_bar(stat = 'identity',
aes(fill = reorder(neighbourhood_group, market_size))) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Categorywise Bar Chart",
subtitle="Manufacturer of vehicles",
fill = "Neighbourhood Group") +
theme_classic() +
scale_fill_brewer(palette="Oranges") #Colors for neighbourhood group
ggplot(market_size_years, aes(x = year, y = market_size)) +
geom_bar(stat = 'identity',
aes(fill = reorder(neighbourhood_group, market_size))) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Categorywise Bar Chart",
subtitle="Manufacturer of vehicles",
fill = "Neighbourhood Group") +
theme_classic() +
scale_fill_brewer(palette="OrRd") #Colors for neighbourhood group
ggplot(market_size_years, aes(x = year, y = market_size)) +
geom_bar(stat = 'identity',
aes(fill = reorder(neighbourhood_group, market_size))) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Categorywise Bar Chart",
subtitle="Manufacturer of vehicles",
fill = "Neighbourhood Group") +
theme_classic() +
scale_fill_brewer(palette="YIOrRd") #Colors for neighbourhood group
ggplot(market_size_years, aes(x = year, y = market_size)) +
geom_bar(stat = 'identity',
aes(fill = reorder(neighbourhood_group, market_size))) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Categorywise Bar Chart",
subtitle="Manufacturer of vehicles",
fill = "Neighbourhood Group") +
theme_classic() +
scale_fill_brewer(palette="YlOrRd") #Colors for neighbourhood group
ggplot(market_size_years, aes(x = year, y = market_size)) +
geom_bar(stat = 'identity',
aes(fill = reorder(neighbourhood_group, market_size))) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Categorywise Bar Chart",
subtitle="Manufacturer of vehicles",
fill = "Neighbourhood Group") +
theme_classic() +
scale_fill_brewer(palette="Set1") #Colors for neighbourhood group
ggplot(market_size_years, aes(x = year, y = market_size)) +
geom_bar(stat = 'identity',
aes(fill = reorder(neighbourhood_group, market_size))) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Categorywise Bar Chart",
subtitle="Manufacturer of vehicles",
fill = "Neighbourhood Group") +
theme_classic() +
scale_fill_brewer(palette="Pastel1") #Colors for neighbourhood group
ggplot(market_size_years, aes(x = year, y = market_size)) +
geom_bar(stat = 'identity',
aes(fill = reorder(neighbourhood_group, market_size))) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Categorywise Bar Chart",
subtitle="Manufacturer of vehicles",
fill = "Neighbourhood Group") +
theme_classic() +
scale_fill_brewer(palette="BrBG") #Colors for neighbourhood group
ggplot(market_size_years, aes(x = year, y = market_size)) +
geom_bar(stat = 'identity',
aes(fill = reorder(neighbourhood_group, market_size))) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Categorywise Bar Chart",
subtitle="Manufacturer of vehicles",
fill = "Neighbourhood Group") +
theme_classic() +
scale_fill_brewer(palette="Reds") #Colors for neighbourhood group
ggplot(market_size_years, aes(x = year, y = market_size)) +
geom_bar(stat = 'identity',
aes(fill = reorder(neighbourhood_group, market_size))) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Market Size Over Time",
subtitle="Divided by Neighbourhoods",
fill = "Neighbourhood Group") +
theme_classic() +
scale_fill_brewer(palette="Reds") #Colors for neighbourhood group
ggplot(market_size_years, aes(x = year, y = market_size)) +
geom_bar(stat = 'identity',
aes(fill = reorder(neighbourhood_group, market_size))) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Market Size Over Time",
subtitle="Divided by Neighbourhoods",
y = 'Market Size'
fill = "Neighbourhood Group") +
theme_classic() +
scale_fill_brewer(palette="Reds") #Colors for neighbourhood group
ggplot(market_size_years, aes(x = year, y = market_size)) +
geom_bar(stat = 'identity',
aes(fill = reorder(neighbourhood_group, market_size))) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Market Size Over Time",
subtitle="Divided by Neighbourhoods",
y = 'Market Size',
fill = "Neighbourhood Group") +
theme_classic() +
scale_fill_brewer(palette="Reds") #Colors for neighbourhood group
ggplot(market_size_years, aes(x = year, y = market_size)) +
geom_bar(stat = 'identity',
aes(fill = reorder(neighbourhood_group, market_size))) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Market Size Over Time",
subtitle="Divided by Neighbourhoods",
y = 'Market Size',
x = 'Year'
fill = "Neighbourhood Group") +
theme_classic() +
scale_fill_brewer(palette="Reds") #Colors for neighbourhood group
ggplot(market_size_years, aes(x = year, y = market_size)) +
geom_bar(stat = 'identity',
aes(fill = reorder(neighbourhood_group, market_size))) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Market Size Over Time",
subtitle="Divided by Neighbourhoods",
y = 'Market Size',
x = 'Year' +
fill = "Neighbourhood Group") +
theme_classic() +
scale_fill_brewer(palette="Reds") #Colors for neighbourhood group
ggplot(market_size_years, aes(x = year, y = market_size)) +
geom_bar(stat = 'identity',
aes(fill = reorder(neighbourhood_group, market_size))) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Market Size Over Time",
subtitle="Divided by Neighbourhoods",
y = 'Market Size',
x = 'Year' ,
fill = "Neighbourhood Group") +
theme_classic() +
scale_fill_brewer(palette="Reds") #Colors for neighbourhood group
ggplot(market_size_years, aes(x = year, y = market_size)) +
geom_bar(stat = 'identity',
aes(fill = reorder(neighbourhood_group, market_size))) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Market Size Over Time",
subtitle="Divided by Neighbourhoods",
y = 'Market Size',
x = 'Year' ,
fill = "Neighbourhood Group") +
theme_classic() +
scale_y_continuous(labels = scales::unit_format(unit = "M", scale = 1e-6))
ggplot(market_size_years, aes(x = year, y = market_size)) +
geom_bar(stat = 'identity',
aes(fill = reorder(neighbourhood_group, market_size))) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Market Size Over Time",
subtitle="Divided by Neighbourhoods",
y = 'Market Size',
x = 'Year' ,
fill = "Neighbourhood Group") +
theme_classic() +
scale_y_continuous(labels = scales::unit_format(unit = "M", scale = 1e-6)) +
scale_fill_brewer(palette="Reds") #Colors for neighbourhood group
#Loading AirBnb 2015-2020 Data into a single dataframe and adding a column
#to identify which year the observation belongs to
setwd("C:/Users/Daniel/Dropbox/Data Science/NYC DSA/R/Exploratory Visualization and Shiny Project/AirBnB-NYC-2019-Visualization-Project")
airbnb_data = purrr::map_dfr(list.files(pattern="*.csv", full.names = TRUE),
~read.csv(.x) %>% mutate(year = sub(".csv$", "", basename(.x)),
year = sub("listings ", "", year),
year = as.factor(year)))
airbnb_data2015 = airbnb_data %>%
filter(year == '2015')
airbnb_data2015 = market_size_func(airbnb_data2015)
airbnb_data = market_size_func(airbnb_data)
market_size_years = airbnb_data %>%
group_by(year, neighbourhood_group) %>%
summarize(market_size = sum(availability_by_price))
ggplot(market_size_years, aes(x = year, y = market_size)) +
geom_bar(stat = 'identity',
aes(fill = reorder(neighbourhood_group, market_size))) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Market Size Over Time",
subtitle="Divided by Neighbourhoods",
y = 'Market Size',
x = 'Year' ,
fill = "Neighbourhood Group") +
theme_classic() +
scale_y_continuous(labels = scales::unit_format(unit = "M", scale = 1e-6)) +
scale_fill_brewer(palette="Reds") #Colors for neighbourhood group
View(airbnb_data2015)
mean(airbnb_data2015$price)
mean(airbnb_data2016$price)
mean(airbnb_data2015$availability_365)
mean(airbnb_data2016$availability_365)
ggplot(market_size_years, aes(x = year, y = market_size)) +
geom_bar(stat = 'identity',
aes(fill = reorder(neighbourhood_group, market_size))) +
theme(axis.text.x = element_text(angle=65, vjust=0.6)) +
labs(title="Market Size Over Time",
subtitle="Divided by Neighbourhoods",
y = 'Market Size',
x = 'Year' ,
fill = "Neighbourhood Group") +
theme_classic() +
scale_y_continuous(labels = scales::unit_format(unit = "M", scale = 1e-6)) +
scale_fill_brewer(palette="Reds") #Colors for neighbourhood group
ggplot(scatter_plot_data, aes(x = reorder(neighbourhood, reviews_per_listingdays) ,
y = reviews_per_listingdays,
label = scales::percent(market_share),
size = market_size)) +
geom_point(col="tomato2")  +
geom_segment(aes(x = neighbourhood,
xend = neighbourhood,
y = min(reviews_per_listingdays),
yend = max(reviews_per_listingdays)),
linetype = "dashed",
size = 0.1,
alpha = 0.2) +
#ylim(-2.5, 2.5) +
labs(title="Ratio of Reviews per Listing Days",
subtitle="Top 15 Neighbourhoods",
y = "Reviews per Listing Days",
size = "Market Size") +
theme_classic() +
theme(axis.title.y = element_blank()) +
scale_size(labels = scales::unit_format(unit = "M", scale = 1e-6)) +
coord_flip()
ggplot(scatter_plot_data, aes(x = reorder(neighbourhood, reviews_per_listingdays) ,
y = reviews_per_listingdays,
label = scales::percent(market_share),
size = market_size)) +
geom_point(col="reds")  +
geom_segment(aes(x = neighbourhood,
xend = neighbourhood,
y = min(reviews_per_listingdays),
yend = max(reviews_per_listingdays)),
linetype = "dashed",
size = 0.1,
alpha = 0.2) +
#ylim(-2.5, 2.5) +
labs(title="Ratio of Reviews per Listing Days",
subtitle="Top 15 Neighbourhoods",
y = "Reviews per Listing Days",
size = "Market Size") +
theme_classic() +
theme(axis.title.y = element_blank()) +
scale_size(labels = scales::unit_format(unit = "M", scale = 1e-6)) +
coord_flip()
ggplot(scatter_plot_data, aes(x = reorder(neighbourhood, reviews_per_listingdays) ,
y = reviews_per_listingdays,
label = scales::percent(market_share),
size = market_size)) +
geom_point(col="Reds")  +
geom_segment(aes(x = neighbourhood,
xend = neighbourhood,
y = min(reviews_per_listingdays),
yend = max(reviews_per_listingdays)),
linetype = "dashed",
size = 0.1,
alpha = 0.2) +
#ylim(-2.5, 2.5) +
labs(title="Ratio of Reviews per Listing Days",
subtitle="Top 15 Neighbourhoods",
y = "Reviews per Listing Days",
size = "Market Size") +
theme_classic() +
theme(axis.title.y = element_blank()) +
scale_size(labels = scales::unit_format(unit = "M", scale = 1e-6)) +
coord_flip()
ggplot(scatter_plot_data, aes(x = reorder(neighbourhood, reviews_per_listingdays) ,
y = reviews_per_listingdays,
label = scales::percent(market_share),
size = market_size)) +
geom_point(col="Red")  +
geom_segment(aes(x = neighbourhood,
xend = neighbourhood,
y = min(reviews_per_listingdays),
yend = max(reviews_per_listingdays)),
linetype = "dashed",
size = 0.1,
alpha = 0.2) +
#ylim(-2.5, 2.5) +
labs(title="Ratio of Reviews per Listing Days",
subtitle="Top 15 Neighbourhoods",
y = "Reviews per Listing Days",
size = "Market Size") +
theme_classic() +
theme(axis.title.y = element_blank()) +
scale_size(labels = scales::unit_format(unit = "M", scale = 1e-6)) +
coord_flip()
ggplot(scatter_plot_data, aes(x = reorder(neighbourhood, reviews_per_listingdays) ,
y = reviews_per_listingdays,
label = scales::percent(market_share),
size = market_size)) +
geom_point(col="tomato2")  +
geom_segment(aes(x = neighbourhood,
xend = neighbourhood,
y = min(reviews_per_listingdays),
yend = max(reviews_per_listingdays)),
linetype = "dashed",
size = 0.1,
alpha = 0.2) +
#ylim(-2.5, 2.5) +
labs(title="Ratio of Reviews per Listing Days",
subtitle="Top 15 Neighbourhoods",
y = "Reviews per Listing Days",
size = "Market Size") +
theme_classic() +
theme(axis.title.y = element_blank()) +
scale_size(labels = scales::unit_format(unit = "M", scale = 1e-6)) +
coord_flip()
